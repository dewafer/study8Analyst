@Grab('org.eclipse.jetty.aggregate:jetty-server')
@Grab('org.eclipse.jetty.aggregate:jetty-servlet')
@Grab('javax.servlet:javax.servlet-api:3.0.1')
@Grab('org.hsqldb:hsqldb')
@GrabConfig(systemClassLoader=true)

import groovy.servlet.GroovyServlet
import groovy.sql.Sql
import org.eclipse.jetty.server.Server
import org.eclipse.jetty.servlet.DefaultServlet
import org.eclipse.jetty.servlet.ServletContextHandler
import org.hsqldb.jdbc.JDBCDataSource

def server = new Server(1234)

def context = new ServletContextHandler(server, '/', ServletContextHandler.SESSIONS)

def dataSource = new JDBCDataSource (
        database: 'jdbc:hsqldb:file:magicMirrorDB',
        user: 'sa',
        password: ''
)

Sql sql = new Sql(dataSource)

sql.withTransaction {
    sql.execute '''
        CREATE TABLE IF NOT EXISTS Student (
            student_id  INTEGER GENERATED BY DEFAULT AS IDENTITY,
            student_no  VARCHAR(50),
            name        VARCHAR(250),
            gender      VARCHAR(2),
            class       VARCHAR(50)
        );
    '''

    sql.execute '''
        CREATE TABLE IF NOT EXISTS Subject (
            subject_id  INTEGER GENERATED BY DEFAULT AS IDENTITY,
            name        VARCHAR(250)
        );
    '''

    sql.execute '''
        CREATE TABLE IF NOT EXISTS exam (
            exam_id     INTEGER GENERATED BY DEFAULT AS IDENTITY,
            student_id  INTEGER,
            subject_id  INTEGER,
            name        VARCHAR(250),
            score       INTEGER
        );
    '''
}

sql.close()

context.with {
    resourceBase = 'webroot'
    addServlet(DefaultServlet, '/')
    addServlet(GroovyServlet, '*.groovy')
    welcomeFiles = ['index.html']
    setAttribute('dataSource', dataSource)
}

server.start()
